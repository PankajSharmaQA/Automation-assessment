package Test;

import io.restassured.RestAssured;
import io.restassured.response.Response;
import static io.restassured.RestAssured.*;
import org.testng.Assert;
import org.testng.annotations.Test;

public class API_Test01 {	
    String userId;

    @Test
    public void testReqresApiFlow() {
        RestAssured.baseURI = "https://reqres.in/api/users";

    // Step1- Create a user, validate the response http status code. Fetch and store userId.
        String requestBody = "{ \"name\": \"Pankaj\", \"job\": \"TestEngineer\" }";
        Response createUser = given()
                .header("Content-Type", "application/json")
                .when().body(requestBody)
                .post();
        
        String body = createUser.getBody().asString();
        System.out.println("Create User Response Body"+body);
        Assert.assertEquals(createUser.statusCode(),201,  "User creation failed");
        userId = createUser.jsonPath().getString("id");
        System.out.println("Created user ID: " + userId);

    // Step2- Get the created user details and validate the same. 
        Response getResponse = given()
                .get("/" + userId);         
        if (getResponse.statusCode() == 200) {
            System.out.println("User exists.");
        } else {
            System.out.println("User not exist, Id is- " + userId + " returns Status Code " + getResponse.statusCode());
        }

    // Step3- Update user's name, and validate the same.
        String updatedRequestBody = "{ \"name\": \"PankajUpdate\", \"job\": \"TestEngineerUpdate\" }";
        Response updateUser = given()
                .header("Content-Type", "application/json")
                .when().body(updatedRequestBody)
                .put("/" + userId);

        Assert.assertEquals(updateUser.statusCode(),200);
        String updatedName = updateUser.jsonPath().getString("name");
        Assert.assertEquals("PankajUpdate", updatedName, "Name not updated correctly");
        System.out.println("User updated successfully.");
    }
    
}
